CSS隨手筆記：

    有弧度的動畫：
    在我們使用css動畫時，系統會自動幫我們找尋最短的路徑，也就是代表移動會是直行的，並不會有弧度。
    而若是要做到弧度的話，我們可以從改變系統的最短路徑下手。
    css範例如下：
     .buoy__icon
    {
      position: relative;
      width: .5rem;
      height: .5rem;
      animation: toLeft 2s forwards cubic-bezier(0.02, 0.01, 0.21, 1);
    }
    .buoy__icon::after
    {
        content: "";
        position: relative;
        display: block;
        width: .9rem;
        height: .8rem;
        background-image: url('@/assets/images/home/icon_redEnvelope_pop_tiger.png');
        background-size: cover;
        animation: toBottom 2.5s forwards cubic-bezier(0.3, 0.27, 0.07, 1.64);
    }
    @keyframes toLeft {
      100%{
        animation-timing-function: cubic-bezier(0.02, 0.01, 0.21, 1);
        transform: translateX(-1.5rem);
      }
    }
    @keyframes toBottom {
      100%{
        animation-timing-function: cubic-bezier(0.3, 0.27, 0.07, 1.64);
        transform: translateY(1.8rem);
      }
    }

    解說：可以看到是透過偽元素來實現，讓本體與偽元素的速率不同來讓系統的最短路徑進行改變。

    參考至：https://jinlong.github.io/2016/01/14/moving-along-a-curved-path-in-css-with-layered-animation/